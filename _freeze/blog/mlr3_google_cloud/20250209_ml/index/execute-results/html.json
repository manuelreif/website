{
  "hash": "b9482f387b470fda9853c91a5a828792",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Machine Learning in der Google Cloud\"\ndescription: \"Wenn man eine Maschine und 300$ hat, dann lässt man die Maschine auch was lernen, denn man kann es sich ja leisten. Dieser Blogeintrag zeigt in aller notwendigen Kürze, wie ich ein `mlr3` Modell aus auf Google Cloud laufen lasse.\"\nauthor: Manuel Reif \ndate: 2025-02-08\nlang: de\ncategories: [R, google Cloud, mlr3, docker, git]\ndraft: false \nhighlight-style: monokai\nimage: media/thumb_drama.webp\nexecute:\n    eval: true\n    message: false\n    echo: false\n    warning: false\n    freeze: true\nfilters:\n   - include-code-files\n---\n\n\n\n<img src=\"media/thumb_drama.webp\" alt=\"Christmas-Docker\" style=\"float: right; width: 38%; margin-left: 20px; margin-bottom: 10px;\"/>\n\n[mlr3](https://mlr3.mlr-org.com/) ist ein Package, das mich phasenweise leiden lässt.\nJeder, der das schon einmal gesehen hat, will es nicht noch einmal erleben. \nDennoch löst `mlr3` einige Probleme und, wie jedes gute Package, löst es mehr \nProbleme, als es neue schafft. Vielleicht ist es nicht unbedingt etwas für den\n08/15-R-Anwender, der gerne einmal ein Machine-Learning-Modell laufen lassen möchte, \num zu sehen, wie man sich als Data Scientist fühlt, sondern eher für jemanden, der\nheute, morgen und vermutlich auch übermorgen unterschiedliche Modelle fitten \nund vor allem tunen möchte. Denn so cool es auch ist, dass jeder da draußen ein\nR-Package schreiben kann, so schwierig ist es, sich auf die Logik jedes einzelnen\nPackages einzulassen. Die Zeit fehlt oft, obwohl man natürlich gerne die neuesten\nModelle anwenden will (so wie ich Random Forests {{< bi emoji-laughing >}}). \n\n`mlr3` ist nicht das einzige Package, das dieses Problem zu lösen versucht, aber das\neinzige, das wir uns hier ansehen. Auf der useR! 2024 stolperte ich mehr oder weniger\nin einen überfüllten Seminarraum und damit in ein Tutorial zu `mlr3`.\nSchicksalhafte Begegnungen, die nun in diesem Blogpost münden.\nDer stille Held dieser und aller weiteren Stories auf der Google Cloud ist wieder der\ngute alte [Docker Container](https://www.docker.com/), der wie ein gutes Elternteil\nalles mit dabei hat, was notwendig ist, um den Ausflug der R-Files in die Cloud zu\nermöglichen.\n\n\n## Der Datensatz\n\nSchlaganfälle sind eine ernste Sache. Um das Risiko eines Schlaganfalls vorhersagen zu\nkönnen, muss man Daten sammeln. \nIn [diesem Datensatz](https://www.kaggle.com/datasets/fedesoriano/stroke-prediction-dataset) \nexistieren 11 clinical features - quasi die unabhängigen Variablen.\n@tbl-data-desc-num und @tbl-data-desc-fct zeigen getrennt nach Skalenniveau die einzelnen Variablen. Die Variable, die es vorherzusagen gilt, ist `stroke` – kodiert\nals 0/1. Die Angabe in der Tabelle ist etwas unintuitiv – sie weist letztlich die\nAnzahl der Schlaganfälle (1) bzw. deren Anteil an den Gesamtbeobachtungen aus. \nWas die anderen Variablen im Detail bedeuten, ist nicht unbedingt wichtig. Wir \nwollen sie bloß verwenden, um `stroke` möglichst gut zu erklären.\nAllerdings scheinen die Variablen sinnvoll: Alter (macht alles schlechter), Bluthochdruck,\ndie Frage nach einer bereits bestehenden Herzerkrankung, der BMI oder die \nInformation ob jemand raucht oder nicht etc. wollen wir hier in weiterer Folge auf ihre \nprognostische Werthaltigkeit prüfen.\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n        \n\n\n::: {#tbl-data-desc-num .cell tbl-cap='Beschreibung der metrischen Variablen'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code: Tabellen metrisch\"}\nsummary_table_n <- tbl_summary(d_numeric) %>% \n     add_n() %>% \n    as_gt() %>% \n      gt_theme_538()\n\nsummary_table_n\n```\n\n```{=html}\n<div id=\"eqhamefffa\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Cairo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#eqhamefffa table {\n  font-family: Cairo, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#eqhamefffa thead, #eqhamefffa tbody, #eqhamefffa tfoot, #eqhamefffa tr, #eqhamefffa td, #eqhamefffa th {\n  border-style: none;\n}\n\n#eqhamefffa p {\n  margin: 0;\n  padding: 0;\n}\n\n#eqhamefffa .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: 400;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: none;\n  border-top-width: 3px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#eqhamefffa .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#eqhamefffa .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#eqhamefffa .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_bottom_border {\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_col_headings {\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#eqhamefffa .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#eqhamefffa .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#eqhamefffa .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#eqhamefffa .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#eqhamefffa .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#eqhamefffa .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#eqhamefffa .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  vertical-align: middle;\n}\n\n#eqhamefffa .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#eqhamefffa .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#eqhamefffa .gt_row {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#eqhamefffa .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #FFFFFF;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqhamefffa .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#eqhamefffa .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#eqhamefffa .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#eqhamefffa .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqhamefffa .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#eqhamefffa .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqhamefffa .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#eqhamefffa .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqhamefffa .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eqhamefffa .gt_sourcenote {\n  font-size: 12px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eqhamefffa .gt_left {\n  text-align: left;\n}\n\n#eqhamefffa .gt_center {\n  text-align: center;\n}\n\n#eqhamefffa .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#eqhamefffa .gt_font_normal {\n  font-weight: normal;\n}\n\n#eqhamefffa .gt_font_bold {\n  font-weight: bold;\n}\n\n#eqhamefffa .gt_font_italic {\n  font-style: italic;\n}\n\n#eqhamefffa .gt_super {\n  font-size: 65%;\n}\n\n#eqhamefffa .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#eqhamefffa .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#eqhamefffa .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#eqhamefffa .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#eqhamefffa .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#eqhamefffa .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#eqhamefffa .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#eqhamefffa .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#eqhamefffa div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n\ntbody tr:last-child {\n  border-bottom: 2px solid #ffffff00;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"label\"><span data-qmd-base64=\"PHN0cm9uZz5DaGFyYWN0ZXJpc3RpYzwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>Characteristic</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"n\"><span data-qmd-base64=\"PHN0cm9uZz5OPC9zdHJvbmc+\"><span class='gt_from_md'><strong>N</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"stat_0\"><span data-qmd-base64=\"PHN0cm9uZz5OID0gNSwxMTA8L3N0cm9uZz4=\"><span class='gt_from_md'><strong>N = 5,110</strong></span></span><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">45 (25, 61)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">hypertension</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">498 (9.7%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">heart_disease</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">276 (5.4%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">avg_glucose_level</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">92 (77, 114)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">bmi</td>\n<td headers=\"n\" class=\"gt_row gt_center\">4,909</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">28 (24, 33)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Unknown</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">201</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">stroke</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">249 (4.9%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> <span data-qmd-base64=\"TWVkaWFuIChRMSwgUTMpOyBuICglKQ==\"><span class='gt_from_md'>Median (Q1, Q3); n (%)</span></span></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {#tbl-data-desc-fct .cell tbl-cap='Beschreibung der kategorialen Variablen'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code: Tabellen factor\"}\nsummary_table_n <- tbl_summary(d_factor) %>% \n     add_n() %>% \n    as_gt() %>% \n      gt_theme_538()\n\nsummary_table_n\n```\n\n```{=html}\n<div id=\"bhigkvzrdi\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Cairo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#bhigkvzrdi table {\n  font-family: Cairo, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#bhigkvzrdi thead, #bhigkvzrdi tbody, #bhigkvzrdi tfoot, #bhigkvzrdi tr, #bhigkvzrdi td, #bhigkvzrdi th {\n  border-style: none;\n}\n\n#bhigkvzrdi p {\n  margin: 0;\n  padding: 0;\n}\n\n#bhigkvzrdi .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: 400;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: none;\n  border-top-width: 3px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#bhigkvzrdi .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#bhigkvzrdi .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#bhigkvzrdi .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_bottom_border {\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_col_headings {\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#bhigkvzrdi .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#bhigkvzrdi .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#bhigkvzrdi .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#bhigkvzrdi .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#bhigkvzrdi .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#bhigkvzrdi .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#bhigkvzrdi .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #FFFFFF;\n  vertical-align: middle;\n}\n\n#bhigkvzrdi .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#bhigkvzrdi .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#bhigkvzrdi .gt_row {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#bhigkvzrdi .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #FFFFFF;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhigkvzrdi .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#bhigkvzrdi .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#bhigkvzrdi .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#bhigkvzrdi .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhigkvzrdi .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#bhigkvzrdi .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhigkvzrdi .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#bhigkvzrdi .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhigkvzrdi .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bhigkvzrdi .gt_sourcenote {\n  font-size: 12px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bhigkvzrdi .gt_left {\n  text-align: left;\n}\n\n#bhigkvzrdi .gt_center {\n  text-align: center;\n}\n\n#bhigkvzrdi .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#bhigkvzrdi .gt_font_normal {\n  font-weight: normal;\n}\n\n#bhigkvzrdi .gt_font_bold {\n  font-weight: bold;\n}\n\n#bhigkvzrdi .gt_font_italic {\n  font-style: italic;\n}\n\n#bhigkvzrdi .gt_super {\n  font-size: 65%;\n}\n\n#bhigkvzrdi .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#bhigkvzrdi .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#bhigkvzrdi .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#bhigkvzrdi .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#bhigkvzrdi .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#bhigkvzrdi .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#bhigkvzrdi .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#bhigkvzrdi .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#bhigkvzrdi div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n\ntbody tr:last-child {\n  border-bottom: 2px solid #ffffff00;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"label\"><span data-qmd-base64=\"PHN0cm9uZz5DaGFyYWN0ZXJpc3RpYzwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>Characteristic</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"n\"><span data-qmd-base64=\"PHN0cm9uZz5OPC9zdHJvbmc+\"><span class='gt_from_md'><strong>N</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"border-top-width: 0px; border-top-style: solid; border-top-color: black; font-family: Chivo; font-size: 14px; vertical-align: bottom; font-weight: 200; text-transform: uppercase;\" scope=\"col\" id=\"stat_0\"><span data-qmd-base64=\"PHN0cm9uZz5OID0gNSwxMTA8L3N0cm9uZz4=\"><span class='gt_from_md'><strong>N = 5,110</strong></span></span><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Female</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,994 (59%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Male</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,115 (41%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Other</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1 (&lt;0.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">ever_married</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3,353 (66%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">work_type</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    children</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">687 (13%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Govt_job</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">657 (13%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Never_worked</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">22 (0.4%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Private</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,925 (57%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Self-employed</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">819 (16%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Residence_type</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Rural</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,514 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Urban</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,596 (51%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">smoking_status</td>\n<td headers=\"n\" class=\"gt_row gt_center\">5,110</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    formerly smoked</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">885 (17%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    never smoked</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,892 (37%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    smokes</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">789 (15%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Unknown</td>\n<td headers=\"n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,544 (30%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> <span data-qmd-base64=\"biAoJSk=\"><span class='gt_from_md'>n (%)</span></span></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n\n\n:::\n::::\n\n\n## Das Package\n\n<a href=\"https://mlr3.mlr-org.com/\">\n  <img src=\"media/mlr3verse.svg\" alt=\"mlr3-ecosystem\" style=\"float: right; width: 60%; margin-left: 20px; margin-bottom: 10px;\"/>\n</a>\n\nUm alle Abläufe rund um ein Machine-Learning-Projekt nicht immer selbst implementieren\nzu müssen, ist es klug, auf ein Package zurückzugreifen, das dem/der User:in die\nwesentlichsten Schritte schon einmal abnimmt. Sonst findet man sich in der ermüdenden\nLage, verschachtelte Schleifen zu schreiben und Funktionen zu definieren, die man\neigentlich noch viel allgemeiner formulieren könnte, um sie einfacher \nwiederverwenden zu können.\nAber will man schon so sehr in der Zukunft leben, dass man die gerade aktuelle Funktion\nso baut, dass sie nicht nur das aktuelle, sondern auch möglichst alle zukünftigen\nProbleme gleicher oder ähnlicher Art löst? Manchmal will man das. Manchmal will man\naber auch nur das aktuelle Problem lösen, ohne schon an morgen denken zu müssen,\ninsbesondere, wenn sich bereits andere Menschen ihren schönen Kopf über solche\nFunktionen zerbrochen und ein mutmaßlich benutzerfreundliches Funktionskonstrukt\ngeschaffen haben, das uns viel Denkarbeit abnimmt.\nMan muss nur lernen, mit dem Package umzugehen und sich daran zu gewöhnen. Also, das Package, mit dem hier gearbeitet wird, ist – wie schon angekündigt – [mlr3](https://mlr3.mlr-org.com/).\n\n\n## Der Plan\n\n<img src=\"media/the_plan.webp\" alt=\"Christmas-Docker\" style=\"float: right; width: 38%; margin-left: 20px; margin-bottom: 10px;\"/>\n\nHier der konkrete, geplante Ablauf:\n\n1. Wähle eine Methode, mit der die Target-Variable (`stroke`) vorhergesagt werden soll.  \n2. Bereite den Datensatz so auf, wie es für die gewählte Methode notwendig ist.  \n3. Splitte den Datensatz in Trainings- und Testdatensatz. Der Testdatensatz kann dann verwendet werden, um unterschiedliche Methoden anhand ihrer Prognoseleistung zu vergleichen.  \n4. Führe eine wiederholte Cross-Validation (CV) auf dem Trainingsdatensatz durch (z. B. klassische 5-fold-CV). Das bedeutet, der Datensatz wird in fünf Teile geteilt: Auf 4/5 der Daten wird das Modell trainiert und auf dem restlichen 1/5 wird vorhergesagt. Dies wird fünfmal wiederholt.  \n5. Fitte auf dem Trainingsdatensatz ein beliebiges Modell (z. B. einen Random Forest) mit einer bestimmten Parameterkonstellation.  \n6. Tune die Parameter, um die beste Parameterkombination zu ermitteln!  \n7. Am Ende versuchst du, mit dem getunten Modell `stroke` im Testdatensatz vorherzusagen. Diese Performance gibt uns eine gute Einschätzung, wie gut das Modell in Zukunft performen wird!\n\nDieser Plan findet bei mir üblicherweise als R-Code seinen Niederschlag. \nKonkret sieht der Code so aus.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code: Random Forests mit mlr3\"}\nlibrary(data.table) #<1>\nlibrary(magrittr)\nlibrary(mlr3)\nlibrary(mlr3tuning)\nlibrary(mlr3extralearners)\nlibrary(mlr3learners)\nlibrary(mlr3pipelines)\nlibrary(paradox)\nlibrary(bbotk)\nlibrary(mlr3mbo)\nlibrary(forcats)\nlibrary(future)\n\nplan(multicore) #<2>\n\n## Argumente uebernehmen\nargs <- commandArgs(trailingOnly = TRUE) #<3>\n\n# defaults\ndefault_evals    <- 20\ndefault_duration <- 2 * 60 * 60\n\nn_evals  <- ifelse(length(args) >= 1, as.integer(args[1]), default_evals)\nduration <- ifelse(length(args) >= 2, as.integer(args[2]), default_duration)\n\ncat(\"\\n -------------------------------------------- \\n\")\ncat(\"Tuning Stoppt nach:\\n\")\ncat(\"  Evals:\", n_evals, \"\\n\")\ncat(\"  Zeit in Sekunden:\", duration)\ncat(\"\\n -------------------------------------------- \\n\\n\")\n\nset.seed(42)\n\n# einlesen und modden\nd = fread(\"healthcare-dataset-stroke-data.csv\") %>% \n  .[, bmi := as.numeric(ifelse(bmi == \"N/A\", NA_character_, bmi))] %>% \n  .[, id := as.character(id)]  %>% # id muss ein character sein!\n  .[gender != \"Other\",]\n\n#### TASK ######################################################################\n\n# es ist etwas kompliziert eine variable den feature status zu entziehen.\ntask_stroke = as_task_classif(d, target = \"stroke\") #<4>\ntask_stroke$col_roles$feature <- setdiff(task_stroke$col_roles$feature, \"id\")\ntask_stroke$col_roles$name <- \"id\"\ntask_stroke$set_col_roles(\"stroke\", c(\"target\",\"stratum\")) #<5>\n\nsplit = partition(task_stroke, ratio = 0.8) \n\n### learner --------------------------------------------------------------------\nlearner_rf = lrn(\"classif.ranger\", #<6>\n                 predict_type = \"prob\",\n                 respect.unordered.factors = \"partition\",\n                 importance = \"permutation\",\n                 num.trees = 5000,\n                 id = \"rf\") # mit id = \"rf\" kann ich bei ps dann die präambel kuerzer schreiben\n\n# rf muss davor geschrieben werden, weil es sonst bei der pipe unklarheiten\n# bezueglich parameternamen gibt!\nparam_set = ps( #<7>\n  rf.mtry.ratio = p_dbl(0.4, 1),\n  rf.min.node.size = p_int(20, 800) \n)\n\n### resampling -----------------------------------------------------------------\nresampling_CV5 = rsmp(\"cv\", folds = 5) #<8>\nmeasure_AUC    = msr(\"classif.auc\")\n\n### tuner ----------------------------------------------------------------------\ntuner_bayes = tnr(\"mbo\") #<9>\n\n### terminator -----------------------------------------------------------------\nterminator2 = trm(\"combo\", #<10>\n                 list(\n                   trm(\"evals\", n_evals = n_evals),\n                   trm(\"run_time\", secs = duration)\n                 )\n)\n\n### pipeline -------------------------------------------------------------------\npo_impute_d_uk <- po(\"imputelearner\", learner = lrn(\"regr.rpart\"), \n                     param_vals = list(\n                       affect_columns = selector_type(\"numeric\")\n                     ), id = \"imp_d_uk\")\n\npip_rob = pipeline_robustify(task = task_stroke, #<11>\n                             learner = learner_rf,\n                             character_action = \"factor!\",\n                             impute_missings = FALSE) %>>%\npo_impute_d_uk %>>%\npo(\"learner\", \n learner = learner_rf) \n  \n### autotune -------------------------------------------------------------------\nat = AutoTuner$new(\n  learner = pip_rob,\n  resampling = resampling_CV5,\n  measure = measure_AUC,\n  search_space = param_set,\n  terminator = terminator2,\n  tuner = tuner_bayes)\n\nat$train(task_stroke, row_ids = split$train)\n\npred_res = at$predict(task_stroke, row_ids = split$test)\nauc_test = measure_AUC$score(pred_res)\n\nfull_res = list(at = at, \n                pred_res = pred_res, \n                auc_test = auc_test,\n                split = split)\n\nsaveRDS(full_res, \"output/ranger_only.rds\")  \n```\n:::\n\n\n1. Wir laden wirklich viele Packages, insbesondere `mlr3` und seine Freunde. Im unten stehenden `Dockerfile` sieht man, welche Packages in Summe installiert werden. Das heißt: Lässt man alles im Docker-Container laufen, wird alles fix und fertig installiert!\n2. Wir wollen parallelisieren, sonst dauert es zu lange. Mit dieser Einstellung  werden alle vorliegenden Kerne genutzt. Als Argument kann man `multicore`  oder `multisession` verwenden. `multicore` funktioniert nur unter Linux, aber Vorsicht: Beim Ausprobieren verschiedener ML-Tools hatte ich damit Probleme. Konkret lief `XGboost` nur mit `multisession`!\n3. Dieses Statement ermöglicht es, später in der Shell mithilfe von Argumenten die Terminator-Bedingungen zu modulieren.\n4. In `mlr3` muss man zuerst immer einen Task definieren. Achtung: Man kann ein `target` definieren, aber keine `features`.\n5. In diesem Schritt wird ein Stratum definiert, nämlich unser `target`. In der nächsten Zeile wird der Datensatz geteilt (genauer gesagt werden Row-IDs bestimmt) in einen Trainings- und einen Testdatensatz. Der Testdatensatz wird quasi 'zurückgehalten', um halbwegs objektiv die zukünftige Prognosegenauigkeit bestimmen zu können. Das ist insbesondere wichtig, wenn wir in Zukunft mit anderen Modellen vergleichen wollen.\n6. Hier wird der `learner` definiert. In unserem Fall ein Random Forest, der mithilfe des `ranger` packages gefittet werden soll.\n7. Wenn man Parameter tunen möchte, dann muss man einen Range angeben in dem der optimale Parameter gesucht werden soll.\n8. Hier wird die Art der Kreuzvalidierung festgelegt. In diesem Fall ist es eine 5-fold Cross Validation. \n9. Das ist der Tuner und er stammt aus dem [mlr3mbo](https://mlr3mbo.mlr-org.com/articles/mlr3mbo.html)-Package. Wir haben in Punkt 6 den Range der Parameter definiert, aber nicht festgelegt, welche Parameterwerte konkret getestet werden sollen. Dieser Tuner setzt auf Bayesian Optimization und versucht auf Basis der bisherigen Parameterkombinationen die vermutlich beste Kombination für den nächsten Durchlauf zu finden.\n10. Der kombinierte Terminator. Denn irgendwann muss auch mal Schluss sein mit dem Machine Learning. Hier wird eine Kombi aus Anzahl der Durchläufe und Dauer genommen. Das ist sehr praktisch, denn man kann einstellen, dass das Ganze z. B.  maximal 24 Stunden laufen soll.\n11. Hier kommt das eigentliche Highlight: [mlr3pipelines](https://mlr3pipelines.mlr-org.com/)! Das wirkt hier jetzt noch unspektakulär. Was macht diese Pipeline? Sie imputiert Missing Values mithilfe eines Regression Trees und macht den Datensatz robust, falls, vor allem beim Splitten der Daten via CV, Unvorhergesehenes auftritt.\n\nDiesen Code packen wir in einen docker Container, schicken ihn auf die \nGoogle Cloud um ihn dort 'laufen zu lassen'! Der konkrete Docker-Container für\ndieses Projekt sieht so aus:\n\n```dockerfile\nFROM rocker/r-ver:4.3.1\n\n# Systemaktualisierungen und notwendige Linux-Pakete\nRUN apt-get update && apt-get install -y \\\n    libcurl4-openssl-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    libgit2-dev \\\n    git \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Installieren von 'pak' von GitHub für die neueste Version\nRUN R -e \"install.packages('pak', repos = 'https://r-lib.github.io/p/pak/dev/')\"\nRUN R -e \"pak::pkg_install('Rdatatable/data.table')\"\nRUN R -e \"pak::pkg_install(c('magrittr', 'future','mlr-org/mlr3', 'mlr-org/mlr3tuning', 'mlr-org/mlr3extralearners', 'mlr-org/mlr3learners', 'mlr-org/mlr3pipelines', 'mlr-org/paradox', 'mlr-org/bbotk', 'mlr-org/mlr3mbo', 'mlr-org/mlr3misc', 'mlr-org/mlr3measures','ranger', 'DiceKriging', 'rgenoud', 'forcats', 'future', 'kknn', 'e1071', 'xgboost'))\"\n\nWORKDIR /tune\n\nCOPY healthcare-dataset-stroke-data.csv /tune/healthcare-dataset-stroke-data.csv\nCOPY *.R /tune/\n\nRUN mkdir /tune/output\n\n# Setzen des ENTRYPOINT auf Rscript\nENTRYPOINT [\"Rscript\"]\n```\n\n\n@fig-dockerworkflow zeigt die konkrete Abfolge, wie ich das Docker-Image auf die \nVM-Instanz von Google übertragen habe. Wichtig ist natürlich, dass man einen Account\nauf [Docker Hub](https://hub.docker.com/) besitzt, um das Image dorthin pushen zu können. \n\nEbenfalls viel Arbeit spart das konsequente Ausprobieren auf dem eigenen Rechner – \ndas heißt, den Docker-Container lokal (mit wenigen Iterationen) laufen zu lassen, \num schnell zu testen.\n\nUm eine VM-Instanz zu starten, probiert man am besten ein wenig herum und wählt \neine Maschine, die zum eigenen Problem passt. In der Testphase ist man jedoch \nrelativ limitiert, das heißt, man kann nicht beliebig große Instanzen mieten. \nEntsprechend sollten die zu lösenden Machine-Learning-Probleme nicht zu groß sein!\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Verteilung der einzelnen auc Werte je Parameterkombination](index_files/figure-html/fig-dockerworkflow-1.png){#fig-dockerworkflow width=864}\n:::\n:::\n\n\n\n\n\n\n## Die Ergebnisse (Random Forest)\n\n\nAm Ende des Tages wollen wir irgendetwas über die Daten erfahren.\n\n1. Welche Variablen sind wichtig?\n2. Wie ist der funktionale Zusammenhang der Variablen mit `stroke`?\n2. Wie genau können wir vorhersagen?\n3. Wie müssen die Parameter gewählt werden um möglichst genaue Vorhersagen zu\ntreffen?\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n### Parameter\n\nWir haben das Modell mittels Bayesian Optimization getuned. Das heisst, es wird\nnicht per Zufall, oder deterministisch (via grid) gesucht, sondern es wird dort gesucht \nwo auf Basis der vorliegenden Daten ein möglichst hoher **auc** vermutet wird --\ndas ist die Fläche unter eine ROC Kurve. Je größer die Fläche desto besser.\nSchauen wir uns also die Parameterkombination an, um zu sehen wo sich ein\nMaximum einstellt.\n\nWir haben 2 Parameter getunded:\n\n1. `min.node.size`: Ist die minimal notwendige Anzahl bei der ein Node gerade \nnoch gesplittet werden darf. D. h. es wird auch Nodes geben mit einem geringeren\nN als `min.node.size` -- diese können aber nicht mehr gesplittet werden!\n2. `mtry.ratio`: Anteil, wieviele Variablen genutzt werden sollen.  \n\n@fig-hyper-param-tuning1 zeigt die Verteilung des auc je nach Parameterkombination. \nMit einem roten X ist die Parameterkombination mit dem höchsten auc gekennzeichnet.\nDiese liegt am Rande unseres Parameterraums. Betrachtet man den kompletten Raum\nwirkt es so, dass eigentlich alle Kombinationen zu recht guten Ergebnissen führen.\nDer gelbe Fleck am Rand suggeriert, dass eventuell noch bessere Ergebnisse \nzu finden wären, wenn wir `min.node.size` noch weiter nach oben schrauben würden.\n\n\nDas ist beste Kombination der beiden Parameter:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   rf.mtry.ratio rf.min.node.size learner_param_vals  x_domain classif.auc\n           <num>            <int>             <list>    <list>       <num>\n1:     0.9926336              800         <list[19]> <list[2]>    0.841047\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Verteilung der einzelnen auc Werte je Parameterkombination](index_files/figure-html/fig-hyper-param-tuning1-1.png){#fig-hyper-param-tuning1 width=768}\n:::\n:::\n\n\n\n\n<details>\n  <summary>Hier klicken um das Tuning Ergebnis des Random Search zu sehen</summary>\n    \n  Wer sich dafür interessiert: Ich habe das Ganze nochmal als \"Random Search\"\n  durchlaufen lassen. Der Nachteil: Es wird viel unsystematischer gesucht, d. h. \n  der Algorithmus sucht auch in Ecken wo er ziemlich sicher weiß, dass kein\n  besserer auc Wert zu erzielen ist. Der Vorteil: Er sammelt überall\n  vertreut Daten. Gleichzeitig hab ich `min.node.size` auf 1200 erhöht. \n  @fig-hyper-param-tuning2 zeigt das Ergebnis. \n  Es ist gut zu erkennen, dass das Maximum in einem sehr ähnlichen Bereich\n  gefunden wird, wie zuvor das Tuning mittels `mlr3mbo`.\n  \n  Das ist beste Kombination der beiden Parameter:\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   rf.mtry.ratio rf.min.node.size learner_param_vals  x_domain classif.auc\n           <num>            <int>             <list>    <list>       <num>\n1:     0.9992251              857         <list[19]> <list[2]>   0.8407681\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Verteilung der einzelnen auc Werte je Parameterkombination](index_files/figure-html/fig-hyper-param-tuning2-1.png){#fig-hyper-param-tuning2 width=768}\n:::\n:::\n\n\n </details>\n\n\n\n### Variable Importance\n\nDie Variable Importance gibt an, welche Variablen am wichtigsten für die Vorhersage\nsind. Das Package `ranger`, auf das hier zurückgegriffen wurde, um die Random Forests\nlaufen zu lassen, berechnet unter anderem die 'Permutation'-Variable-Importance. Dabei\nwird für jeden Tree dessen Accuracy anhand des OOB-Samples bestimmt, um dann im\nnächsten Schritt jeweils eine Variable zufällig zu permutieren, damit der Rückgang der\nAccuracy gemessen werden kann. Je stärker dieser Rückgang ausfällt, desto 'wichtiger'\nist die Variable.\nOffensichtlich ist die Variable `age` besonders wichtig. Inhaltlich hätte ich eher mit\nder Variable `heart disease` gerechnet – umso interessanter, dass `age` so deutlich\ndominiert. Vermultlich weil auch vergleichsweise junge Personen im Datensatz sind,\nbei denen Schlaganfälle so gut wie nicht vorkommen (siehe @tbl-data-desc-num).\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Variable Importance](index_files/figure-html/fig-varimp-1.png){#fig-varimp width=576}\n:::\n:::\n\n\n\n### Funktionale Zusammenhänge\n\nWenn man nicht nur einem einzelnen Wert vertrauen will, sondern sich auch die\nErklärungskraft jeder einzelnen Variable und deren funktionalen\nZusammenhang ansehen möchte, kann mittels [DALEX](https://dalex.drwhy.ai/) und \n[DALEXtra](https://modeloriented.github.io/DALEXtra/) package\nansprechende 'Partial Dependene Plots' anfertigen^[Hier sind es eigentlich 'Accumulated Local Dependence' Plots.]!\nIn @fig-pdp-age sieht man den Zusammenhang der Variable `age` mit der\nWahrscheinlichkeit einen `stroke` zu erleiden. Wie zu erwarten war: je älter\ndesto eher droht die Gefahr eines Schlaganfalls.\nDass das Vorliegen einer `heart disease` sich auch förderlich\nauf einen Schlaganfall auswirkt zeigt @fig-pdp-agehd.\n\n![Partial-Dependence Plot der Variable Alter](gra/r3a_age_.png){#fig-pdp-age}\n\n\n![Partial-Dependence Plot der Variable Alter zusammen mit Heart disease](gra/r3a_age_heart_disease.png){#fig-pdp-agehd}\n\nDas kann man natürlich für alle Variablen machen und diese miteinander kombinieren.\nWir wollen uns hier keinesfalls im Inhaltlichen verlieren.\nBezüglich Prognose stellt sich noch die Frage, was wir in Zukunft erwarten können? \nWie gut wird das Modell performen, wenn wir es auf unseren bis jetzt zurückgehaltenen\nTestdatensatz anwenden?\n\n### Testdatensatz\n\nIrl macht man so eine Prozedur wie diese ja dafür, um am Ende des Tages \nein Modell zu haben, um zukünftige Fälle klassifizieren zu können, oder\nzukünftigen Personen eine `stroke` Wahrscheinlichkeit zuzuweisen.\nD. h. wir wollen *jetzt* abschätzen, wie gut wir unbekannte Datensätze\nvorhersagen würden. Diese Info bekommen wir, indem wir unser getuntes Modell,\nauf den Testdatensatz anwenden.\n\n@fig-roc1 und @fig-pr1 zeigen die Modellperformance des Modells auf den Testdaten.\nWas wäre ideal? Die ideale ROC Kurve steigt extrem steil (möglichst senkrecht) \nan und verläuft anschließend am oberen Rand\nmöglichst parallel zur x-Achse. Umgekehrt verhält es sich mit dem PR-Plot. Er\nsollte von Anfang an oben verlaufen und möglichst spät steil abstürzen; in einer\nidealen Welt. \nBeide Plots berechnen für viele unterschiedliche Thresholds die jeweiligen\nKennwerte (Specificity, Sensitivity etc.) aus und stellt diese als Gesamtgrafik dar.\n\nUnser Modell schaut nicht so schlecht aus. Allerdings ist auch noch Luft nach oben; \nhoffentlich.\n\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![ROC Kurve auf den Testdaten](index_files/figure-html/fig-roc1-1.png){#fig-roc1 width=672}\n:::\n:::\n\n\n:::\n:::{.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![PR Kurve auf den Testdaten](index_files/figure-html/fig-pr1-1.png){#fig-pr1 width=672}\n:::\n:::\n\n\n:::\n::::\n\n\nIn einem weiteren Blogbeitrag, wird dieser Datensatz noch weiter durch den \nDaten Fleischwolf gedreht. Es wird sich die Gelegenheit ergeben, das neue Modell\nanhand des Testdatensatzes mit diesem Random Forest zu vergleichen.\n\n\n<br>\n\n::: {style='text-align:center;'}\n\n\n\n{{< bi brightness-alt-high-fill size=66px >}}\n\n\n\n\n:::\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}