{
  "hash": "b3e8cdd254fd3488eef999277fc0c42e",
  "result": {
    "markdown": "---\ntitle: \"State Space Models - Teil 2\"\ndescription: \"Es geht weiter in der Space Saga.\"\nauthor: Manuel Reif \ndate: 2024-04-01\nlang: de\ncategories: [R, stan, state-space-models]\ndraft: false \nhighlight-style: monokai\nformat:\n  html:\n    css: ssm2.css\nexecute:\n    eval: false\n    message: false\n    echo: false\n    warning: false\nbibliography: ../texts.bib\nfilters:\n   - include-code-files\n---\n\n\n# State Space Model mit Slope\n\n\n\n\n::: {.cell}\n\n:::\n\n\n<img src=\"media/more_parameters.gif\" alt=\"State Space Model\" style=\"float: right; width: 40%; margin-left: 20px; margin-bottom: 10px;\"/>\n\nOk, bisher hatten wir nur einen Intercept in unserem State Space Model\nder sich je nach Daten \"random\" bewegt. Zusätzlich nimmt man an, dass man einen \nMeasurement Error hat. Das Ganze schaut ziemlich spektakulär aus, endete aber\ndamit, dass die Forecasts Konstanten sind. Wenn wir aber davon ausgehen,\ndass sich bestehende Trends in die Zukunft fortsetzen können, ist das sicher \nkein ideales Modell. Es ist einfach zu naiv und zu einfach gestrickt. Wir wollen \naber nicht judgy sein -- jeder von uns ist mal naiv -- das macht uns alle zu \nModellen.\n\nHier wird es jetzt richtig abgestatespaced, denn wollen viel mehr. \nUnd das bekommen wir nur mit **noch mehr Parameter**!\nAlso droppen wir einfach einen Parameter rein -- oder vielleicht nicht nur einen alleine\nsondern wir klotzen einfach analog zum Style des bisherigen State Space Models\nfür jeden Zeitpunkt einen eigenen Parameter rein! Der Slope soll sich also je \nnach Zeitpunkt ändern können. Das klingt extrem wild weil es extrem wild ist.\n\nBeschäftigen wir uns im ersten Schritt mit einem Modell das weniger Parameter hat. \nWie schaut denn eigentlich ein Slope in einem einfachen linearen Modell \n(Einfachregression) aus? Unten\nist eben dieses Modell dargestellt. \nDer Slope ($\\beta_1$) gibt die Veränderung von y an, wenn x um **eine Einheit** \ngrößer wird. Also konkret: wenn $\\beta_1 = 2$ ist, dann erhöht sich y um 2 wenn \nx sich um 1 erhöht.\nThat's it. \n\n\n```{=tex}\n\\begin{align}\ny &= \\alpha + \\beta_1\\,x + \\epsilon & |  \\quad \\alpha = Intercept,\\,\\beta_1 = Slope\n\\end{align}\n```\n\n\n\n<img src=\"media/where_slope_pic.jpg\" alt=\"State Space Model\" style=\"float: left; width: 28%; margin-right: 20px; margin-bottom: 10px;\"/>\n\nMit diesem Wissen im Hinterkopf schauen wir uns nun das erweiterte State-Space Model wie es \nhier unten angeführt ist. Es gibt einen neuen Parameter $\\nu$ und schon wieder \neinen Error $\\zeta$, den wir mal wieder als normalverteilt annehmen. Laut Lehrbuch\nsind die drei Gleichungen dann das State-Space Model mit Slope. Die\nFrage die sich aufdrängt ist: Wo ist hier denn eigentlich jetzt der Slope? Und als\nergänzende Frage: In einem linearen Modell hab ich eine Variable x die y \nerklären soll. Also z. B. soll die Körpermasse durch die Körperhöhe erklärt oder\nvorhergesagt werden -- d. h. es gibt 2 Variablen. In unserem State Space Model haben\nwir (bis jetzt) nur eine einzige Variable -- nämlich die Werte die y in der\nZeitreihe annimmt.\n\n\n\n\n```{=tex}\n\\begin{align}\ny_t &= \\tau_t + \\epsilon_t  & \\epsilon_t &\\sim \\mathcal{N}(0, \\sigma_{\\epsilon}) \\label{eq:ssm2-slope1}\\\\\n\\tau_{t+1} &= \\tau_{t} + \\nu_{t} + \\xi_{t} & \\xi_{t}&\\sim \\mathcal{N}(0, \\sigma_{\\xi})\\\\\n\\nu_{t+1} &= \\nu_{t} + \\zeta_{t} & \\zeta_{t}&\\sim \\mathcal{N}(0, \\sigma_{\\zeta})\n\\end{align}\n```\n\n\n\nAlso schauen wir uns das mal genauer an. Wir gehen genauso vor wie\nin @ssm-book-intro2007 dargestellt und nehmen an, dass $\\xi_1 = 0$ und $\\zeta_1 = 0$\num das Ganze einfacher zu gestalten und herauszufinden wo denn nun\neigentlich der Slope und das x sind. Also wir beginnen bei $t = 1$, also der\nersten Beobachtung. \n\n\n::: {.callout-tip icon=\"false\"}\n## $t = 1$\n\n\n```{=tex}\n\\begin{align}\ny_1 &= \\tau_1 + \\epsilon_1\\\\\n\\tau_{2} &= \\tau_{1} + \\nu_{1} + \\xi_{1} \\quad \\rightarrow \\quad \\xi_{1} = 0 \\quad \\rightarrow \\quad \\tau_{2} = \\tau_{1} + \\nu_{1} \\\\\n\\nu_{2} &= \\nu_{1} + \\zeta_{t} \\quad \\quad \\quad \\, \\rightarrow  \\quad \\zeta_{t} = 0 \\quad \\rightarrow \\quad  \\nu_{2} = \\nu_{1}\\\\\n&\\text{das heisst:}\\\\\n\\tau_{2} &= \\tau_{1} + \\nu_{1} &\\\\\n\\nu_{2} &= \\nu_{1} &\n\\end{align}\n```\n\n:::\n\n\nDie wesentlichste Erkenntnis bei  $t = 1$ ist, dass $\\nu_{2} = \\nu_{1}$.\nWir bewegen uns in weiterer Folge die Timeline nach vorne. Wir rattern\nalle Zeitpunkte (t) durch, und versuchen alle Terme die uns bekannt vorkommen\ngeschickt zu substituieren und zusammenzufassen. Dabei sehen wir **warum** $\\nu$ \nder Slope ist und dass alles an **t** hängt.\nOhne den ganzen Random-Terms ist das auch wirklich einfacher zu erkennen. \n\n\n::: {.callout-tip icon=\"false\"}\n## $t = 2$\n\n```{=tex}\n\\begin{align}\ny_2 &= \\tau_2 + \\epsilon_2\\\\\ny_2 &= \\underbrace{\\tau_{1} + \\nu_{1}}_{\\tau_2} + \\epsilon_2 \\quad | \\quad \\tau_2 \\text{ eingesetzt von t = 1}\\\\\n\\\\\n\\hline \\\\\n\\tau_{3} &= \\tau_{2} + \\nu_{2} \\\\\n\\tau_{3} &= \\underbrace{\\tau_{1} + \\nu_{1}}_{\\tau_2} + \\nu_{2} \\quad | \\quad \\tau_2 \\text{ eingesetzt von t = 1} \\\\\n\\tau_{3} &= \\tau_{1} + \\nu_{1} + \\nu_{1} \\quad | \\quad \\nu_2 = \\nu_1 \\text{ eingesetzt von t = 1}\\\\\n\\tau_{3} &= \\tau_{1} + 2\\,\\nu_{1} \\\\\n\\\\\n\\hline \\\\\n\\nu_{3} &= \\nu_{2}\n\\end{align}\n```\n\n:::\n\n\n::: {.callout-tip icon=\"false\"}\n## $t = 3$\n\n```{=tex}\n\\begin{align}\ny_3 &= \\tau_3 + \\epsilon_3\\\\\ny_3 &= \\tau_{1} + 2\\,\\nu_{1} + \\epsilon_3\\\\\n\\\\\n\\hline \\\\\n\\tau_{4} &= \\tau_{3} + \\nu_{3} \\\\\n\\tau_{4} &= \\underbrace{\\tau_{1} + 2\\,\\nu_{1}}_{\\tau_3} + \\nu_{3} \\quad | \\quad \\tau_3 \\text{ eingesetzt von t = 2} \\\\\n\\tau_{4} &= \\tau_{1} + 2\\,\\nu_{1} + \\nu_{1} \\quad | \\quad \\nu_2 = \\nu_1 \\text{ und } \\nu_3 = \\nu_2 \\,\\text{ daher: } \\nu_3 = \\nu_1 \\\\\n\\tau_{4} &= \\tau_{1} + 3\\,\\nu_{1} \\\\\n\\\\\n\\hline \\\\\n\\nu_{4} &= \\nu_{3}\n\\end{align}\n```\n\n:::\n\n\n::: {.callout-tip icon=\"false\"}\n## state equations allgemein\n\n```{=tex}\n\\begin{align}\ny_t &= \\tau_t + \\epsilon_t\\\\\ny_t &= \\tau_1 + \\nu_1\\,g_t + \\epsilon_t \\quad \\text{wobei:} \\quad g_t = t - 1\n\\end{align}\n```\n\n:::\n\n\nJetzt kennen wir den Sinn der neuen Parameter. Allerdings ist die Frage wie denn\nnun die Parameter zusammenspielen? Kann man diese auch genügend gut auseinanderhalten?\nWenn ich eine lineare Regression ansehe, kann ich vielleicht den Slope erraten --\nkann ich das hier auch? Wie schauen Daten aus die mit einer bestimmten Parameterkombination\nsimuliert werden?\n\n\n## Simulation\n\nInteressant ist: Mit den selben Parametern kann der Verlauf völlig unterschiedlich aussehen\nwie man in Abbildung @fig-sim-slope1 und @fig-sim-slope2 sehen kann! Das \nist insofern nicht verwunderlich, als ja nur die Standardabweichungen\ndefiniert sind und somit ein \"rauf\" oder \"runter\" sich im Wesentlichen\ndurch Zufall ergibt!\nEs wäre jedenfalls interessant zu sehen und verstehen wie \"random\" diese\nVerläufe nun wirklich sind. Dafür müssen wir simulieren.\n\n::: {.panel-tabset}\n\n## Erste Simulation\n\n\n::: {.cell}\n\n:::\n\n::: {.cell fig.showtext='true'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code: Grafik mit simulierten Daten\"}\nsubtxt = \"$\\\\sigma_{\\\\xi} = [sd_xi];\n\\\\phantom{x} sigma_{\\\\epsilon} = [sd_epsilon];\n\\\\phantom{x}  sigma_{\\\\zeta} = [sd_zeta]$\"  \n\nsubtxt_glued = glue(subtxt, .open = \"[\", .close = \"]\", \n                    sd_zeta = 0.1, \n                    sd_epsilon = 2, \n                    sd_xi = 1,\n                    slope = 0)\n\np1 = ggplot(data = dat1_drift, aes(x = time, y = y)) + \n    geom_point(shape = 1, alpha = 0.8) + \n    geom_step(aes(y = true_values), color = paletteer_d(\"trekcolors::starfleet\")[2]) +\n    labs(title = \"Simulation 1 - State Space Model\", subtitle = latex2exp::TeX(subtxt_glued)) +\n    ssm_theme2() +\n    theme(axis.text.x =  element_text(family = \"barr\", face = \"plain\"))\n\np1\n```\n\n::: {.cell-output-display}\n![Simulierte Daten 1](index_files/figure-html/fig-sim-slope1-1.png){#fig-sim-slope1 width=864}\n:::\n:::\n\n\n## Zweite Simulation\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell fig.showtext='true'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code: Grafik mit simulierten Daten\"}\np1 = ggplot(data = dat1_drift2, aes(x = time, y = y)) + \n    geom_point(shape = 1, alpha = 0.8) + \n    geom_step(aes(y = true_values), color = paletteer_d(\"trekcolors::starfleet\")[2]) +\n    labs(title = \"Simulation 2 - State Space Model\", subtitle = latex2exp::TeX(subtxt_glued)) +\n    ssm_theme2() + \n    theme(axis.text.x =  element_text(family = \"barr\", face = \"plain\"))\n\np1\n```\n\n::: {.cell-output-display}\n![Simulierte Daten 2](index_files/figure-html/fig-sim-slope2-1.png){#fig-sim-slope2 width=864}\n:::\n:::\n\n\n:::\n\n\nHier sehen wir uns nicht nur 2 Realisationen von simulierten Daten an, sondern \ngleich 1000 gleichzeitig, um zu sehen, inwiefern sich die Verläufe voneinander\nunterscheiden und auch wie die unterschiedlichen Einzelteile des State Space Models \nineinander greifen.\nAlso: Was für einen Unterschied macht es eigentlich, wenn die Parameter sich ändern?\n\nUm auch einen fixen Trend in der Simulation einbauen zu können, wurde hier\ndas State Space Model um einen Parameter $\\beta$ erweitert, der den langfristigen,\nzeitunabhängigen overall Trend der Zeitreihe angibt.\n\n\n```{=tex}\n\\begin{align}\ny_t &= \\tau_t + \\epsilon_t  & \\epsilon_t &\\sim \\mathcal{N}(0, \\sigma_{\\epsilon})\\\\\n\\tau_{t+1} &= \\tau_{t} + \\beta + \\nu_{t} + \\xi_{t} & \\xi_{t}&\\sim \\mathcal{N}(0, \\sigma_{\\xi})\\\\\n\\nu_{t+1} &= \\nu_{t} + \\zeta_{t} & \\zeta_{t}&\\sim \\mathcal{N}(0, \\sigma_{\\zeta})\n\\end{align}\n```\n\n\nAnhand der bloßen Verläufe kann man die Ausprägungen der Parameter kaum abschätzen \n(siehe jeweils die oberste der drei Abbildungen). Die 1000 simulierten Zeitreihen \nstarten an der selben Position und ergeben zusammengenommen einen \ntrichterartigen Verlauf. Wie weit die Linien auseinandergehen hängt von den\nParametern ab. Das Auge erkennt aber nicht welcher Parameter nun welche Ausprägung\nhat.\n\nDabei hilft uns der Density Plot, der immer im 2. Panel zu sehen ist.\nDie Density beschreibt die Häufigkeit, wie oft der nachfolgende True Value größer ist\nals der aktuelle True Value. Sammelt sich die meiste Masse in der Mitte, bedeutet das,\ndass es ein Coinflip ist ob der nächste Wert höher ist oder nicht. Sammelt sich\ndie Masse an den Enden, bedeutet das, dass die Zeitreihe eine eindeutige \"Meinung\" \nbezüglich des nachfolgenden Werts hat. Entweder ist die Wahrscheinlichkeit deutlich\nzugunsten eines höheren oder eines niedrigeren Werts.\nWenn $\\sigma_{\\zeta}$ klein ist, sammelt sich die Masse in der Mitte. Dann \nstehen die Chancen eben Fifty Fifty ob der nächste Wert höher ist oder nicht.\nWenn $\\sigma_{\\zeta}$ im Verhältnis größer wird, dann gibt es eindeutige Häufigungen\nan den Rändern. Dann bleibt der Wert quasi hoch, wenn er zuvor hoch war,\noder niedrig wenn er zuvor niedrig war.\n\nIn Panel 3 wird die Autokorrelation mit den letzten 15 Werten dargestellt. \nDie senkrechte strichlierte Linie reicht bis\nzum Median der Korrelation über die 1000 Simulationen, während die Box den Abstand zwischen\ndem 25\\ % Percentil und dem 75\\ % Percentil darstellen -- also im Wesentlichen\ndie Box eines Boxplots darstellt. In allen Zeitreihen ist die mittlere\nAutokorrelation vergleichbar groß -- allerdings ist die Schwankung bei $\\beta = 0$ und \nniedrigem $\\sigma_{\\zeta}$ am höchsten.\n\n\nMeine Conclusio aus diesen Simulationen ist:\n\n1. Aus einer Zeitreihe die jweiligen Parameter intuitiv zu schätzen scheint \nunmöglich (für mich)\n2. Weil alle Zeitreihen irgendwie gleich aussehen\n3. Die Unterschiede zeigen sich, wenn man sich 2 aufeinanderfolgende Werte ansehen.\n\n\n\n::: {.panel-tabset}\n\n## Sim 1\n\n\n::: {.cell fig.showtext='true'}\n::: {.cell-output-display}\n![](index_files/figure-html/ssm2-double-plot-sim1-1.png){width=864}\n:::\n:::\n\n\n## Sim 2\n\n\n::: {.cell fig.showtext='true'}\n::: {.cell-output-display}\n![](index_files/figure-html/ssm2-double-plot-sim2-1.png){width=864}\n:::\n:::\n\n\n## Sim 3\n\n\n::: {.cell fig.showtext='true'}\n::: {.cell-output-display}\n![](index_files/figure-html/ssm2-double-plot-sim3-1.png){width=864}\n:::\n:::\n\n\n## Sim 4\n\n\n::: {.cell fig.showtext='true'}\n::: {.cell-output-display}\n![](index_files/figure-html/ssm2-double-plot-sim4-1.png){width=864}\n:::\n:::\n\n\n## Sim 5\n\n\n::: {.cell fig.showtext='true'}\n::: {.cell-output-display}\n![](index_files/figure-html/ssm2-double-plot-sim5-1.png){width=864}\n:::\n:::\n\n\n:::\n\n\n\n\n\n\n\n## `stan` konvergiert nicht\n\nIch mache es kurz. Es ist viel Zeit draufgegangen um diese Modelle in Stan laufen zu lassen.\nAuch mit $> 10 000$ Samples konvergierten die Modelle nicht wenn man sie so\nsimpel implementiert wie ich das geplant hatte.\nDaher wurden für diese Modelle andere Packages verwendet.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\\begin{align}\ny_t &= Z \\alpha_t + \\varepsilon_t, &\\quad \\varepsilon_t &\\sim N(0, H_t), \\\\\n\\alpha_{t+1} &= T \\alpha_t + R \\eta_t, &\\quad \\eta_t &\\sim N(0, Q_t), \\\\\n&&\\alpha_1 &\\sim N(\\alpha_1, P_1),\n\\end{align}\n\n\n## Fitting with `statespacer`\n\nWie schon im vorigen Blogeintrag dargestellt, verwende ich hier das das \n`statespacer` package um die erste Simulation die in @fig-sim-slope2 \nzu sehen ist zu fitten! Die gefittete Zeitreihe samt Forecast für die nächsten \n25 Zeitpunkte ist in @fig-ssm2-statespacer-dygraph1 zu sehen!\nInteressant ist, dass die Prediction eine Gerade mit positiven Slope ist, \nda die Zeitreihe auch über die Zeit hinweg steigt, **obwohl** die keinerlei\nSlope fix verankert wurde! \n\nDas Modell 'erkennt' offensichtlich diesen 'Trend' und setzt ihn auch fort.\n\nUm das Ergebnis auch zu validieren, wurde auch ein Forecast mit dem `KFAS` package\ndurchgeführt, das quasi zum gleichen Ergebnis kam.\n\nDie Frage ist nur: Wie kommt das Modell zu **diesem** Slope, wenn doch im Modell\neigentlich kein fixer Slope definiert wurde? Wie wird die Steigung festgelegt?\n\n\nWenn man `predict` auf ein `statespacer` Modell Objekt anwendet, wird für den\nForecast der letzte Slope herangezogen. Genauer gesagt wird nicht der\ngefilterte sondern der gesmoothed letzte Slope verwendet. Dieser wird stabil in\ndie Zukunft fortgeschrieben, was genau diese Linie ergibt!\n\nSo was ist **Smoothing** jetzt eigentlich? Kurz gesagt: Beim Smoothing wird\ndie gesamte Zeitreihe verwendet. Zuerst wird **gefiltert**, dabei schaut die\nZeitreihe nur nach vorne. Am Ende des Filtern, wird mittels Smoothing die gesamte\nZeitreihe berücksichtigt und nachträglich geglättet und optimiert.\nDamit sollten die Forecasts noch stabiler sein!\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {#fig-ssm2-statespacer-dygraph1 .cell-output-display}\n```{=html}\n<div id=\"htmlwidget-202d1e7af8a3542bf732\" style=\"width:100%;height:496px;\" class=\"dygraphs html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-202d1e7af8a3542bf732\">{\"x\":{\"attrs\":{\"title\":\"Forecast mit State-Space Model with Slope\",\"labels\":[\"time\",\"prediction\",\"y\"],\"legend\":\"auto\",\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60,\"drawAxis\":true},\"y\":{\"drawAxis\":true}},\"series\":{\"y\":{\"axis\":\"y\",\"stepPlot\":false}},\"highlightCircleSize\":3,\"highlightSeriesBackgroundAlpha\":0.5,\"highlightSeriesOpts\":{\"strokeWidth\":1.5},\"hideOverlayOnMouseOut\":true,\"showRangeSelector\":true,\"dateWindow\":[1,125],\"rangeSelectorHeight\":40,\"rangeSelectorPlotFillColor\":\"#AD722CFF\",\"rangeSelectorPlotStrokeColor\":\"#AD722CFF\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\",\"stackedGraph\":false,\"fillGraph\":false,\"fillAlpha\":0.15,\"stepPlot\":false,\"drawPoints\":false,\"pointSize\":1,\"drawGapEdgePoints\":false,\"connectSeparatedPoints\":false,\"strokeWidth\":1,\"strokeBorderColor\":\"white\",\"colors\":[\"#5B1414FF\",\"#AD722CFF\",\"#1A6384FF\"],\"colorValue\":0.5,\"colorSaturation\":1,\"includeZero\":false,\"drawAxesAtZero\":false,\"logscale\":false,\"axisTickSize\":3,\"axisLineColor\":\"grey\",\"axisLineWidth\":0.3,\"axisLabelColor\":\"black\",\"axisLabelFontSize\":14,\"axisLabelWidth\":60,\"drawGrid\":true,\"gridLineColor\":\"lightgray\",\"gridLineWidth\":0.3,\"rightGap\":5,\"digitsAfterDecimal\":2,\"labelsKMB\":false,\"labelsKMG2\":false,\"labelsUTC\":false,\"maxNumberWidth\":6,\"animatedZooms\":false,\"mobileDisableYTouch\":true,\"disableZoom\":false},\"annotations\":[],\"shadings\":[],\"events\":[{\"pos\":\"100\",\"label\":\"Prognose\",\"labelLoc\":\"bottom\",\"color\":\"black\",\"strokePattern\":[7,3],\"axis\":\"x\"}],\"format\":\"numeric\",\"data\":[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],[\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"true\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\",\"pred\"],[0.374561987619378,1.418205028121802,1.271474497915596,1.209275736461757,0.5794449008458276,-0.3938797407057672,4.17971338353081,2.72317932721288,-0.9524674122986891,-2.749681171112481,0.9515198912808251,3.298517908426156,-0.5032144777922523,2.046945284643841,1.814162992088336,3.740414556566083,6.310212816366141,7.934209867580053,5.98669091346745,5.611163662441374,5.3765418887302,9.896916634988486,6.498323757460918,9.654216387280712,11.91362630438413,6.573352501343416,9.518674986021828,9.566188220521418,6.124214137085553,9.354510268339538,11.90666228379474,12.34469111356614,12.369270665609,14.04579912136482,14.09520624141035,14.40850696092744,12.89362149722852,13.55295417485554,13.0870242120584,16.70262798016874,14.5586091052454,16.39007585130352,12.47533566145555,14.33070858143566,16.79383122352955,18.0254218908315,19.77591895528784,17.40721176569077,19.50093200680422,18.00856452547247,18.11630556418609,19.77287226287352,19.48844872417132,20.53042362643062,20.18645826440154,19.19407790716375,23.86207748420435,21.46266979635924,18.76505693525606,20.54115864106452,20.84037950001839,20.21342738417955,19.24108674423586,18.25418672323635,16.44595344959835,22.23446452222814,26.48451913465068,21.06433959712415,21.65280974726717,18.89611403184982,22.29621932507336,22.38658126356479,26.91020053436876,25.36965336892391,26.76308196197888,28.12306913772946,24.86522494953406,28.65083182988512,30.20697737511476,27.80307229207138,28.64494818265384,29.06076715196664,29.53029122341387,32.45113981809797,26.81872156726836,25.15541914057461,26.88135190727505,22.71456672971456,27.41844883418887,29.46205768131622,29.70435504007811,28.55697310892133,26.31011505320063,26.30017171170946,29.0783092238907,30.30746025006259,28.63720969191484,23.68465822509897,27.22595561694224,22.66323089916325,25.50970624247722,25.64714270711758,25.78457917175794,25.9220156363983,26.05945210103866,26.19688856567902,26.33432503031938,26.47176149495974,26.6091979596001,26.74663442424045,26.88407088888081,27.02150735352117,27.15894381816153,27.29638028280189,27.43381674744225,27.57125321208261,27.70868967672297,27.84612614136333,27.98356260600369,28.12099907064405,28.25843553528441,28.39587199992476,28.53330846456512,28.67074492920548,28.80818139384584]],\"fixedtz\":false,\"tzone\":\"\",\"css\":\"\\n@import url('https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\\n\\n\\n.dygraph-title {\\nfont-family: 'Barlow Semi Condensed', serif;\\n  font-weight: 400;\\n  font-style: normal;\\n  text-align: left;\\n  font-size: 24px;\\n  text-indent: 67px;\\n  transform: translateY(-6px);\\n}\\n\\n.dygraph-axis-label {\\nfont-family: 'Barlow Semi Condensed', serif;\\n  font-weight: 200;\\n  font-style: normal;\\n    font-size: 12px;\\n}\"},\"evals\":[\"attrs.interactionModel\"],\"jsHooks\":[]}</script>\n```\n\n\nLocal Level zu Datensatz 1 inkl. Forecasts (Modelle von: Stan und Statespacer)\n:::\n:::\n\n\n\nbei KFAS kommt jetzt dasselbe raus wie bei statespacer\nyay\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n## statespacer sim\n\nHier hat sich (glaub ich) herausgestellt, dass je mehr Obs die Time Series\nhat, desto stabiler können die einzelnen Parameter geschätzt werden.\nUnd da gehts nicht so sehr um SE sondern eigentlich mehr darum dass es manchmal\nwirkt als würde es auf einem lokalen Maximum hängen bleiben.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n1. Hier noch eine schöne Grafik machen\n2. Wir brauchen hier einen Forecast um zu sehen wie das funktioniert.\n3. Schauen wie ich eine Stabile Lineare komponente einbauen kann\n4. Für einen Forecast schauen was passiert wenn ich einen stabilen trend simuliere\nund das normale State Space Modell fitten lasse. Bleibt der stabile Trend im Forecast? Vieleicht\nmuss man den sehr dominant simulieren dass man klarheit hat!\n\nEventuell KFAS package in r anschauen!\n\n\n## stabiler trend - bleibt er erhalten?\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## forecast package \n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/jquery-1.11.1/jquery.min.js\"></script>\n<link href=\"../../../site_libs/dygraphs-1.1.1/dygraph.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/dygraphs-1.1.1/dygraph-combined.js\"></script>\n<script src=\"../../../site_libs/dygraphs-1.1.1/shapes.js\"></script>\n<script src=\"../../../site_libs/moment-2.8.4/moment.js\"></script>\n<script src=\"../../../site_libs/moment-timezone-0.2.5/moment-timezone-with-data.js\"></script>\n<script src=\"../../../site_libs/moment-fquarter-1.0.0/moment-fquarter.min.js\"></script>\n<script src=\"../../../site_libs/dygraphs-binding-1.1.1.6/dygraphs.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}