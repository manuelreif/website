{
  "hash": "230b4ba4e104fe2c6f309daca13f7405",
  "result": {
    "markdown": "---\ntitle: \"Packages\"\nformat: html\ntoc: true\npage-layout: custom\n---\n\n\n<style>\n/* Versteckt den automatisch generierten Titel */\n.title, .header { \n    display: none;\n}\n</style>\n\n::: {.grid}\n\n::: {.g-col-4 .g-start-3}\n<h1 class=\"packi\">Packages</h1>\n:::\n\n:::\n\n\n\n<br>\n\n::: {.grid}\n\n\n::: {.g-col-4 .g-start-3}\n[![](hex_sticker/pp1_hex_2.png)](https://cran.r-project.org/web/packages/PP/)\n:::\n\n::: {.g-col-4 .g-start-7}\n\n## PP package\n\nDas PP package schätzt Personenparameter für IRT Modelle wie das Rasch Modell \n(1-Pl Model), 2-PL, 3-PL, 4-PL Modell und das Partial Credit Model, mittels\nMLE, WLE, MAP, EAP oder robusten Methoden. Zusätzlich\nkönnen unterschiedliche Person Fit Indices berechnet werden, wie Infit, Outfit, \nlz Statistik etc. . Es ist aus der Idee entstanden, unabhängig vom Software Package\ndas die IRT Analyse durchgeführt hat, mit vorliegenden Item Parametern, \nPersonenparameter berechnen zu können.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(PP)\n\n#Example Code\ndata(fourpl_df)\ndiff_par <- attr(fourpl_df,\"diffpar\")\nslope_par <- attr(fourpl_df,\"slopes\")\n\nres1plmle <- PP_4pl(respm = itmat, \n                    thres = diff_par, \n                    slopes = slope_par, \n                    type = \"mle\")\n```\n:::\n\n\n:::\n\n:::\n\n\n<br>\n\n\n::: {.grid}\n\n\n::: {.g-col-4 .g-start-3}\n[![](hex_sticker/mcirt_hex.png)](https://github.com/manuelreif/mcIRT)\n:::\n\n::: {.g-col-4 .g-start-7}\n\n## mcIRT\n\nDas package wurde erstellt um das Nominal Response Model bzw. das\nNested Logit Model zu schätzen und damit eine tiefere Einsicht in die \nFunktionalität von MC Items zu erlangen. Geschätzt wird mit\nMML Methode, mit oder ohne latenter Regression.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mcIRT)\n\nParList <- lapply(1:3,function(x)\n{\n  Item1 <- c(c(-2,-1,1,2),c(-1.2,0.3,0.2,0.7))\n  names(Item1) <- c(paste(\"zeta\",1:4,sep=\"\"),\n                    paste(\"lamb\",1:4,sep=\"\"))\n  Item1\n})\n\nnames(ParList) <- paste(\"item\",1:3,sep=\"\")\n\nperp1     <- rnorm(1100, 0, 1)\nsim.nrm.1 <- NRM.sim(ParList,perp1)\n\nreshdat1 <- reshMG(sim.nrm.1,items=1:3,correct=rep(0,3))\nres_nrm  <- nrm(reshdat1)\n```\n:::\n\n\n\n:::\n\n:::\n\n\n<br>\n\n\n::: {.grid}\n\n::: {.g-col-4 .g-start-3}\n[![](hex_sticker/pvpack_hex.png)](https://github.com/manuelreif/svyPVpack)\n:::\n\n::: {.g-col-4 .g-start-7}\n\n## svyPV package\n\nDieses package ist im Laufe des PIAAC Projekts entstanden und diente\nvor allem dazu, den Umgang mit dem komplexen Surveydesign und den Plausibel Values\nzu erleichtern. Mit den implementierten Funktionen wird sichergestellt,\ndass bei der Berechnung der Konfidenzintervalle sowohl der SE mittels \nBootstrap bzw. Jackknive (mittels `survey` package), als auch die Imputationsvarianz \nberücksichtigt wird. Von einfachen Berechnungen wie Quantilen bis glm sind \nhier einige gängige Methoden umgesetzt die speziell auf diesen Anwendungszweck \nzugeschnitten sind.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(svyPVpack)\n\ndata(svy_example1)\n\nres_glm <- svyPVglm(plaus.. ~ otherPlaus.. + age, \n                    svy.exrep, \n                    placeholder = 1:3)\n\nres_glm\n```\n:::\n\n\n[Weiter Informationen](https://github.com/manuelreif/svyPVpack/wiki)\n\n:::\n\n\n:::\n\n<br>\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}